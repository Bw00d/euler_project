
# The sequence of triangle numbers is generated by adding the natural numbers. 
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
# The first ten terms would be:  1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?


# Start with the factors and work backwards
def count_factors(array)
  array.count
end

# Now supply a triangle number to find factors,
def find_factors(number) #returns and array
  array = []
  i = 1
  while i <= number
    if number % i == 0
      array << i
    end
    i += 1
  end
  array
end

# Generate a triangle number. 
def create_triangle(i, last) # returns a number
  i + last
end

# Interate through triangel numbers until the factor limit is reached.
def find_high_triangle(factor_limit)
  count = 0
  i = 1
  last = 0
  until count == factor_limit
    last = create_triangle(i, last)
    array = find_factors(last)
    count = count_factors(array)
    i += 1
  end
  last
end

